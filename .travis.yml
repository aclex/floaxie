dist: trusty
sudo: false

language: cpp

branches:
  only:
    - master
    - ci_debug
    - /^\d+\.\d+(\.\d+)?(-\S*)?$/

os: linux

matrix:
  include:
    # 'Debug' build type
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
        - BUILD_CONFIGURATION=Debug

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - BUILD_CONFIGURATION=Debug
        - CALC_COVERAGE=1

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
        - BUILD_CONFIGURATION=Debug
        - CALC_COVERAGE=1

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
          packages:
            - clang-3.6
      env:
        - MATRIX_EVAL="CC=clang-3.6 && CXX=clang++-3.6"
        - BUILD_CONFIGURATION=Debug

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - g++-7
            - clang-5.0
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
        - BUILD_CONFIGURATION=Debug

    # 'Release' build type
    - os: linux
      dist: xenial
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
        - BUILD_CONFIGURATION=Release

    - os: linux
      dist: xenial
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - BUILD_CONFIGURATION=Release

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
        - BUILD_CONFIGURATION=Release

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
          packages:
            - clang-3.6
      env:
        - MATRIX_EVAL="CC=clang-3.6 && CXX=clang++-3.6"
        - BUILD_CONFIGURATION=Release

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - g++-7
            - clang-5.0
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
        - BUILD_CONFIGURATION=Release

install:
    - DEPS_DIR="${HOME}/deps"
    - |
      if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
        CMAKE_URL="https://cmake.org/files/v3.13/cmake-3.13.0-Linux-x86_64.tar.gz"
        mkdir -p ${DEPS_DIR}/cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C ${DEPS_DIR}/cmake
        export PATH=${DEPS_DIR}/cmake/bin:${PATH}
        echo ${PATH}
      else
        brew install cmake || brew upgrade cmake
      fi
    - cmake --version

before_install:
    - eval "${MATRIX_EVAL}"
    - if [ -z CALC_COVERAGE ]; then CALC_COVERAGE=0; fi

script:
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=$BUILD_CONFIGURATION -DCMAKE_VERBOSE_MAKEFILE=1 -DBUILD_TESTS=1 -DCALC_COVERAGE=$CALC_COVERAGE ..
  - cmake --build .
  - ctest --output-on-failure

after_success:
  # Uploading report to codecov.io, if calculating coverage
  - if [ $CALC_COVERAGE == 1 ]; then bash <(curl -s https://codecov.io/bash | sed "s/\"gcov\"/\"gcov-7\"/") || echo "Codecov did not collect coverage reports"; fi
